{"name":"Phoenix ESC POS","tagline":"Quick examples to get you up and running with ESC/POS on the Phoenix Thermal Printer","body":"# About Phoenix Thermal Printer\r\nThe Phoenix Thermal Printer by Pyramid Technologies provides a ESC/POS compatible printer interface over DB9 or USB connections. True Windows printer models are also available for XP through Windows 10.\r\n\r\n## What you need\r\n1. Phoenix Printer\r\n2. Proper harness for your model (see Firmware section below)\r\n3. A serial emulator program\r\n\r\n## Firmware and Harness\r\n**IMPORTANT:** You must use the appropriate firmware and cable in order for this to function correctly. Look on the bottom of your Phoenix Printer to determine the model of your device. Refer to the table below to verify what you need:\r\n\r\n| Model | Firmware | Cable | Driver Required | Notes | \r\n|-------|----------|-------|-----------------|-------|\r\n| Pulse | Any* | No | DB9 | ESC/POS over DB9 only. USB is only used for configuration |\r\n| Pulse | S08 (ESC/POS over USB) | USB A to B | [Yes](https://pyramidacceptors.com/apps/PTI_Unified_Serial_Driver_Installer.zip) | ESC/POS over both DB9 and USB as a virtual comm port|\r\n| USB | Win USB | USB A to B | [Yes](https://pyramidacceptors.com/apps/PTI_Phoenix_Windows_Driver_109.zip) | Does not use serial port, true Printer USB class\r\n\r\n**IMPORTANT:** If you are using DB9, we recommend [our harness](http://shop.pyramidacceptors.com/phoenix-rj-45-to-db-9-harness-phx-5p002/). If you decide to use your own harness, be sure that the RS-232 is not TTL (12v) or you will destroy the Phoenix.\r\n\r\n## ESC/POS Basics\r\nESC/POS is protocol for sending data to printers. The basic commands are more or less standardized across vendors but there are slight variations in the more complex command sequences. Will be covering the simple, generic commands such as font styling. In our examples, we will be transmitting ESC/POS data as hexidecimal through our serial emulator because it is more consistent that hoping between ASCII, decimal, and hex.\r\n\r\nFrom the host point of view (yours), there is no flow control or CRC commands to worry about. Simply transmit you commands and let the Phoenix handle the rest. If there are errors in your commands, ESC/POS is the type of protocol that silently fails. That means that malformed commands will be ignored. As a rule of thumb, start with single commands and then chain together more and more are debugging your application.\r\n\r\n## Setup\r\nAt this point, we assume that you have your Phoenix Printer with the appropriate harness. If not, contact our support team and we'll get you on track.\r\n\r\nLaunch your favorite serial emulator and configure for 9600 baud, 1 start bit, 1 stop bit, no parity. No handshaking settings are required or supported on the Phoenix.\r\n\r\nPrint \"Hello, Phoenix printer!\"\r\n`48 65 6c 6c 6f 2c 20 50 68 6f 65 6e 69 78 20 70 72 69 6e 74 65 72 21`\r\n\r\nPrint the buffer, feed 1 line\r\n`0A`\r\n\r\nEnable underline\r\n`1B 2D 01`\r\n\r\nPrint \"This is underlined\" (sorry no markdown for underline)\r\n`54 68 69 73 20 69 73 20 75 6e 64 65 72 6c 69 6e 65 64`\r\n\r\nPrint the buffer, feed 1 line\r\n`0A`\r\n\r\nEnable double height\r\n`1D 21 01`\r\n\r\nDisable underline\r\n`1B 2D 00` \r\n\r\nPrint \"##This is double height\"\r\n`54 68 69 73 20 69 73 20 64 6f 75 62 6c 65 20 68 65 69 67 68 74`\r\n\r\nPrint the buffer, feed 1 line\r\n`0A`\r\n\r\nReset to normal character height\r\n`1D 21 00` \r\n\r\nEnable right justify\r\n`1B 61 02`\r\n\r\nPrint \"Right justified\"\r\n`52 69 67 68 74 20 6a 75 73 74 69 66 69 65 64`\r\n\r\nPrint the buffer, feed 1 line\r\n`0A`","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}